const express=require("express")
const usermodels=require("../models/usermodel")
const router=express.Router()
const bcrypt=require("bcryptjs")

const hasshfunction=async(password)=>
{
    const salt=await bcrypt.genSalt(10)
    return  bcrypt.hash(password,salt)
}

router.post("/add",async(req,res)=>
{
    let{data}={"data":req.body}
    let passwords=data.password
    const hashedpassword=await hasshfunction(passwords).then((hashedpassword)=>
    {
        data.password=hashedpassword
        const model=new usermodels(data)
        model.save()
        res.json({status:"success"})
    })

})

router.post("/login",async(req,res)=>
{
    let data=req.body
    let email=data.emai
    let password=data.password
    let details=await usermodels.findOne({emai:email})
    if(!details)
    {
        return(
            res.json({status:"no user"})
        )
    }
    dbpassword=data.password
    const map=await bcrypt.compare(password,dbpassword)
    if(!map)
    {
        return(
            res.json({status:"invalid credentials"})
        )
    }
    res.json({status:"success"})

})

module.exports=router